plotvolatiles('percent_change_24h', 'Main')
plotvolatiles <- function(series, title) {
seriesmap <- list(verbose=c('day', 'week'), variable=c('percent_change_24h', 'percent_change_7d'))
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- t7data %>% arrange(desc(seriesmap[seriesmap$verbose==series]$variable)) %>% mutate(status = 'winner') %>% head(10)
top10losers <- t7data %>% arrange(seriesmap[seriesmap$verbose==series]$variable) %>% mutate(status = 'loser') %>% head(10)
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity')
}
plotvolatiles('day', 'Umair')
plotvolatiles('day', 'Umair')
?sort
plotvolatiles <- function(series, title) {
# seriesmap <- list(verbose=c('day', 'week'), variable=c('percent_change_24h', 'percent_change_7d'))
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- t7data %>% arrange(desc(series)) %>% mutate(status = 'winner') %>% head(10)
top10losers <- t7data %>% arrange(series) %>% mutate(status = 'loser') %>% head(10)
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity')
}
plotvolatiles('percent_change_24h', 'u')
library(dplyr)
plotvolatiles('percent_change_24h', 'u')
series <- 'percent_change_24h'
top10winners <- t7data %>% arrange(desc(series)) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(desc(as.name(series))) %>% mutate(status = 'winner') %>% head(10)
names(t7data)
top10winners <- t7data %>% arrange(desc(paste('t7data$', as.name(series))) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(desc(paste('t7data$', as.name(series)))) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(desc(t7data$as.name(series))) %>% mutate(status = 'winner') %>% head(10)
series <- as.name(series)
top10winners <- t7data %>% arrange(desc(series)) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(desc(interp(~x, x = series)) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(desc(interp(~x, x = series))) %>% mutate(status = 'winner') %>% head(10)
library(lazyeval)
top10winners <- t7data %>% arrange(desc(interp(~x, x = series))) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(interp(~desc(x), x = series))) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange(interp(~desc(x), x = series)) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange_(desc(series)) %>% mutate(status = 'winner') %>% head(10)
interp(~y, y = series)
top10winners <- t7data %>% arrange_(desc(interp(~y, y = series))) %>% mutate(status = 'winner') %>% head(10)
top10winners
rm(top10winners)
top10winners <- t7data %>% arrange_(desc(interp(~y, y = series))) %>% mutate(status = 'winner') %>% head(10)
top10winners
top10losers <- t7data %>% arrange(interp(~y, y = series)) %>% mutate(status = 'loser') %>% head(10)
top10losers <- t7data %>% interp(~arrange(y), y = series)) %>% mutate(status = 'loser') %>% head(10)
top10losers <- t7data %>% interp(~arrange(y), y = series) %>% mutate(status = 'loser') %>% head(10)
crit <- interp(~y, y = series)
top10winners <- t7data %>% arrange(desc(crit)) %>% mutate(status = 'winner') %>% head(10)
interp(~y, y = series)
series
series <- 'percent_change_24h'
crit <- interp(~y, y = series)
top10winners <- t7data %>% arrange(desc(crit)) %>% mutate(status = 'winner') %>% head(10)
series
crit
crit <- interp(y, y = series)
crit <- interp(y, .values=list(y = series))
top10winners <- t7data %>% arrange_(desc(crit)) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange_(desc(series)) %>% mutate(status = 'winner') %>% head(10)
eval(series)
substitute(series)
top10winners <- t7data %>% arrange(desc(substitute(series))) %>% mutate(status = 'winner') %>% head(10)
top10winners <- t7data %>% arrange_(desc(substitute(series))) %>% mutate(status = 'winner') %>% head(10)
series
top10winners <- t7data %>% arrange(desc(percent_change_24h)) %>% mutate(status = 'winner') %>% head(10)
top10winners
order(top10winners, percent_change_24h)
order(top10winners, top10winners$percent_change_24h)
order(top10winners, x = top10winners$percent_change_24h)
?sort
sort(top10winners$percent_change_24h)
top10winnersreved <- top10winners[top10winners$percent_change_24h==sort(top10winners$percent_change_24h),]
top10winnersreved
which(sort(top10winners$percent_change_24h))
?sort.int
sort(top10winners$percent_change_24h, index.return=T)
sort(top10winners$percent_change_24h, index.return=T)[2]
sort(top10winners$percent_change_24h, index.return=T)[[2]]
rm(top10winners)
top10winners <- t7data[sort(t7data$percent_change_24h, decreasing = T, index.return=T)[[2]],]
top10winners
head(sort(t7data$percent_change_24h, decreasing = T))
head(sort(t7data$percent_change_24h, decreasing = T, return.index = T))
head(sort(t7data$percent_change_24h, decreasing = T, index.return = T))
View(t7data)
head(sort(t7data$percent_change_24h, decreasing = T, index.return = T)[[2]])
head(t7data[order(-percent_change_24h),])
head(t7data[order(t7data, -percent_change_24h),])
head(t7data[order(-t7data$percent_change_24h),])
series
head(t7data[order(-t7data$eval(series)),])
head(t7data[order(-t7data$series,])
head(t7data[order(-t7data$substitute(series),])
head(t7data[order(-t7data$substitute(series)),])
head(t7data[with(t7data, order(-"percent_change_24h"),])
head(t7data[with(t7data, order(-"percent_change_24h")),])
head(t7data[with(t7data, order(-percent_change_24h)),])
head(t7data[with(t7data, order(-series)),])
head(t7data[with(t7data, order(-eval(series))),])
head(t7data[with(t7data, order(eval(series))),])
series
eval(series)
interp(~x, x = series)
head(t7data[with(t7data, order(interp(~x, x = series))),])
head(t7data[order(t7data[,series]),])
head(t7data[order(t7data[,series], decreasing = T),])
library(ggplot2)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity')
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity') + labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10winners %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h),
y=percent_change_24h, fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity') + labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
rm(topvolatiles)
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h),
y=percent_change_24h, fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -series),
y=series, fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
eval(series)
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -eval(series)),
y=eval(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -substitute(series)),
y=substitute(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
substitute(x, x = series)
substitute(x, list(x = series))
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -substitute(x, list(x = series))),
y=substitute(x, list(x = series)), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
deparse(substitute(series))
l
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -deparse(substitute(series))),
y=deparse(substitute(series)), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
series <- deparse(substitute(series))
ggplot(data = topvolatiles, aes(x = reorder(id, -series),
y=series, fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
# series <- deparse(substitute(series))
ggplot(data = topvolatiles, aes(x = reorder(id, -!!series),
y=!!series, fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
# series <- deparse(substitute(series))
series <- quo(series)
ggplot(data = topvolatiles, aes(x = reorder(id, -!!series),
y=!!series, fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
get(series)
plotvolatiles <- function(series) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
# series <- deparse(substitute(series))
# series <- quo(series)
ggplot(data = topvolatiles, aes(x = reorder(id, -get(series)),
y=get(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = 'Top 10 winners and losers in 24 hrs', y = 'change in %', x = 'coin')
}
plotvolatiles('percent_change_24h')
plotvolatiles <- function(series, header) {
seriesmap <- list(input=c('day', 'week'), mapto=c('percent_change_24h', 'percent_change_7d'))
series <- seriesmap[seriesmap$input==series, 2]
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -get(series)),
y=get(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = header, y = 'change in %', x = 'coin')
}
plotvolatiles('day', 'Top 10 in a day')
plotvolatiles <- function(series, header) {
seriesmap <- list(input=c('day', 'week'), mapto=c('percent_change_24h', 'percent_change_7d'))
series <- seriesmap[seriesmap$input==series,][[2]]
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -get(series)),
y=get(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = header, y = 'change in %', x = 'coin')
}
plotvolatiles('day', 'Top 10 in a day')
seriesmap <- list(input=c('day', 'week'), mapto=c('percent_change_24h', 'percent_change_7d'))
series <- 'day'
seriesmap[seriesmap$input==series,][[2]]
seriesmap[seriesmap$input==series]
seriesmap
seriesmap$mapto[seriesmap$input==series]
seriesmap$mapto[seriesmap$input==series, 2]
seriesmap$mapto[seriesmap$input==series]$mapto
seriesmap$mapto[seriesmap$input==series]
seriesmap[seriesmap$input==series,2]
seriesmap[seriesmap$input==series]$mapto
seriesmap$mapto[seriesmap$input==series]
plotvolatiles <- function(series, header) {
seriesmap <- list(input=c('day', 'week'), mapto=c('percent_change_24h', 'percent_change_7d'))
series <- seriesmap$mapto[seriesmap$input==series]
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -get(series)),
y=get(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = header, y = 'change in %', x = 'coin')
}
plotvolatiles('day', 'Top 10 in a day')
plotvolatiles <- function(series, header) {
seriesmap <- list(input=c('day', 'week'), mapto=c('percent_change_24h', 'percent_change_7d'))
series <- seriesmap$mapto[seriesmap$input==series]
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -get(series)),
y=get(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = header, y = 'change in %', x = 'coin') +
theme(plot.title = element_text(hjust=0.5))
}
plotvolatiles('day', 'Top 10 in a day')
plotvolatiles('week', 'Top 10 in a week')
series <- 'percent_change_7d'
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
View(topvolatiles)
largecaps <- dec6 %>% filter(market_cap_usd>10000000000)
View(largecaps)
View(top10winners)
View(top10losers)
plotvolatiles <- function(series, header) {
seriesmap <- list(input=c('day', 'week'), mapto=c('percent_change_24h', 'percent_change_7d'))
series <- seriesmap$mapto[seriesmap$input==series]
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- head(t7data[order(t7data[,series], decreasing = T),], 10)
top10winners <- top10winners %>% mutate(status = 'winner')
top10losers <- head(t7data[order(t7data[,series]),], 10)
top10losers <- top10losers %>% mutate(status = 'loser')
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -get(series)),
y=get(series), fill=id)) +
geom_bar(stat = 'identity') +
labs(title = header, y = 'change in %', x = 'coin') +
theme(plot.title = element_text(hjust=0.5), axis.text.x = element_text(angle=90))
}
plotvolatiles('day', 'Top 10 in a day')
market_cap_raw <- dec6[, c("id", "market_cap_usd")]
cap <- market_cap_raw[!is.na(market_cap_raw$market_cap_usd),]
names(cap)
filter(cap, market_cap_usd>300000000)
threshhold <- 'market_cap_usd>300000000
''
threshhold <- 'market_cap_usd>300000000'
cap[['market_cap_usd']]
threshhold
threshhold <- '>30000000000'
cap[cap[["market_cap_usd"]]get(threshold)]
cap[cap[["market_cap_usd"]]threshold,]
cap[cap[["market_cap_usd"]]eval(threshold),]
eval(threshhold)
get(threshhold)
eval(parse(text=threshhold))
cap[cap[["market_cap_usd"]]eval(parse(text=threshold),]
subset(cap, eval(parse(text=threshhold)))
subset(cap, eval(parse(text=paste('market_cap_usd', threshhold)))
subset(cap, eval(parse(text=paste('market_cap_usd', threshhold))))
threshhold
capcount <- function(threshhold) {
nrow(subset(cap, eval(parse(text=paste('market_cap_usd', threshhold)))))
}
capcount('>300000000')
?grep
grepl(' ', threshhold)
threshhold <- '<300000000 >50000000'
grepl(' ', threshhold)
strsplit(threshhold)
strsplit(threshhold, ' ')
strsplit(threshhold, ' ')[2]
strsplit(threshhold, ' ')[[1]][2]
ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]))
threshhold <- '>=300000000'
ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]))
ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]), paste('market_cap_usd', threshhold))
threshhold <- '<300000000 >50000000'
ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]), paste('market_cap_usd', threshhold))
capcount <- function(threshhold) {
nrow(subset(cap, eval(parse(text=ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]), paste('market_cap_usd', threshhold))))))
}
capcount('>=300000000')
capcount('<300000000 >=50000000')
capcount('<50000000')
896+96+39
biggish <- capcount('>=300000000')
# Same as above for micro ...
micro <- capcount('<300000000 >=50000000')
# ... and for nano
nano <- capcount('<50000000')
values <- list(biggish, micro, nano)
values
values <- data.frame(biggish, micro, nano)
values
qplot(values)
qplot(values, stat = 'identity')
ggplot(data = values)+geom_bar(stat = 'identity')
table(subset(cap, eval(parse(text=ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]), paste('market_cap_usd', threshhold)))))))
table(subset(cap, eval(parse(text=ifelse(grepl(' ', threshhold), paste('market_cap_usd', strsplit(threshhold, ' ')[[1]][1], '& market_cap_usd', strsplit(threshhold, ' ')[[1]][2]), paste('market_cap_usd', threshhold))))))
hist(values)
barplot(values)
values
values <- rbind(biggish, micro, nano)
values
barplot(values)
qplot(values)
qplot(values, stat = 'identity')
values[1]
class(values)
values <- data.frame(rbind(biggish, micro, nano))
View(values)
values$cat <- rownames(values)
values$count <- values$rbind.biggish..micro..nano.
values <- values[c(cat, count),]
values <- values[c('cat', 'count'),]
values
values <- rbind.data.frame(biggish, micro, nano)
values
values <- data_frame(biggish, micro, nano)
values <- data_frame(rbind(biggish, micro, nano))
values
tidyr::gather(values$biggish:values$nano, key='category', value='count')
tidyr::gather(with(values, biggish:nano, key='category', value='count')
tidyr::gather(with(values, biggish:nano), key='category', value='count')
list(biggish=biggish, micro=micro, nano=nano)
data.frame(list(biggish=biggish, micro=micro, nano=nano))
library(tidyr)
values
values <- values %>% gather(biggish:nano, key='cat', value='count')
qplot(values, stat = 'identity')
ggplot(values, aes(x = cat, y = count)) + geom_bar(stat = 'identity')
View(cap)
View(t7data)
min(t7data$percent_change_24h)
min(t7data$percent_change_24h, na.rm = T)
t7data[t7data$percent_change_24h==min(t7data$percent_change_24h, na.rm = T),]
subset(t7data, percent_change_24h==min(percent_change_24h, na.rm = T))
subset(t7data, percent_change_24h==max(percent_change_24h, na.rm = T))
subset(t7data, percent_change_24h==max(percent_change_7d, na.rm = T))
subset(t7data, percent_change_7d==max(percent_change_7d, na.rm = T))
subset(t7data, percent_change_7d==min(percent_change_7d, na.rm = T))
load("/media/umair/F00E03AB0E0369C4/Studies/Stats/BRFSS/brfss2013.RData")
rm(list = ls())
load("/media/umair/F00E03AB0E0369C4/Studies/Stats/BRFSS/brfss2013.RData")
getwd()
setwd('/media/umair/F00E03AB0E0369C4/Studies/Stats/BRFSS')
View(head(brfss2013))
names(brfss2013)
class(brfss2013$employ1)
table(brfss2013$employ1)
hist(brfss2013$employ1)
hist(table(brfss2013$employ1))
ggplot(data = brfss2013, aes(x = employ1)) + geom_histogram()
ggplot(data = brfss2013, aes(x = employ1)) + geom_histogram(stat = 'count')
ggplot(data = brfss2013, aes(x = employ1)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
levels(brfss2013$employ1)
levels(brfss2013$sex)
ggplot(data = brfss2013, aes(x = sex)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
class(brfss2013$income2)
levels(brfss2013$income2)
ggplot(data = brfss2013, aes(x = income2)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = veteran3)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = educa)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = pregnant)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = rrclass2)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = cadult)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = Iadult)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = ladult)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = X_incomg)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
with(table(employ1, sex)
with(table(employ1, sex))
with(brfss2013, table(employ1, sex))
ggplot(data = brfss2013, aes(x = sex)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = sex)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
load("brfss2013.RData")
ggplot(data = brfss2013, aes(x = sex)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
ggplot(data = brfss2013, aes(x = employ1)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
table(brfss2013$employ1)
load("brfss2013.RData")
ggplot(data = brfss2013, aes(x = employ1)) + geom_histogram(stat = 'count')+theme(axis.text.x = element_text(angle = 90))
table(brfss2013$employ1)
